<!DOCTYPE html>
<html lang="zh-Hant">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>鳳凰音訊轉錄儀 v3 (完整靜態佈局版)</title>
    <!-- 移除了所有外部 CDN 依賴，使用內聯樣式 -->
    <style>
        /* --- 變數與基本設定 --- */
        :root {
            --bg-color: #F8F9FA;
            --text-color: #202124;
            --card-bg-color: rgba(255, 255, 255, 0.85);
            --card-border-color: #e0e0e0;
            --button-bg-color: #007bff;
            --button-hover-bg-color: #0056b3;
            --disabled-bg-color: #ccc;
            --progress-bar-bg: #e9ecef;
            --success-color: #28a745;
            --status-green: #28a745;
            --status-yellow: #ffc107;
        }
        body { 
            font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, "Noto Sans", sans-serif;
            background-color: var(--bg-color); 
            color: var(--text-color);
            padding: 20px;
            font-size: 100%;
            line-height: 1.5;
        }
        .container { max-width: 1200px; margin: auto; display: flex; flex-direction: column; gap: 24px; }
        
        /* --- 卡片與佈局 --- */
        .card { 
            border: 1px solid var(--card-border-color); 
            border-radius: 12px; 
            padding: 24px; 
            background-color: var(--card-bg-color);
            backdrop-filter: blur(10px);
            box-shadow: 0 4px 6px rgba(0,0,0,0.05);
        }
        .grid-2-col {
            display: grid;
            grid-template-columns: 1fr; /* Default to 1 column */
            gap: 24px;
        }
        @media (min-width: 768px) { /* 2 columns on medium screens and up */
            .grid-2-col {
                grid-template-columns: 1fr 1fr;
            }
        }
        .flex-col { display: flex; flex-direction: column; gap: 16px; }
        h1 { font-size: 1.8em; font-weight: 700; }
        h2 { font-size: 1.3em; font-weight: 600; margin-bottom: 12px; }
        
        /* --- 表單與按鈕 --- */
        button {
            padding: 10px 20px;
            border: none;
            border-radius: 8px;
            cursor: pointer;
            background-color: var(--button-bg-color);
            color: white;
            font-weight: 500;
            transition: all 0.2s;
        }
        button:hover:not(:disabled) { background-color: var(--button-hover-bg-color); transform: translateY(-1px); }
        button:disabled { background-color: var(--disabled-bg-color); cursor: not-allowed; transform: none; }
        select {
            width: 100%;
            padding: 10px;
            border-radius: 6px;
            border: 1px solid #ccc;
        }
        .file-drop-zone {
            border: 2px dashed #ccc;
            border-radius: 12px;
            padding: 30px;
            text-align: center;
            cursor: pointer;
            transition: background-color 0.2s, border-color 0.2s;
        }
        .file-drop-zone:hover { background-color: #f0f8ff; border-color: var(--button-bg-color); }
        .hidden { display: none; }

        /* --- 儀表板 --- */
        .dashboard-grid { display: grid; grid-template-columns: repeat(auto-fit, minmax(200px, 1fr)); gap: 16px; }
        .stat-item { font-size: 0.9em; }
        .status-light { width: 10px; height: 10px; border-radius: 50%; display: inline-block; margin-right: 8px; }
        .status-green { background-color: var(--status-green); box-shadow: 0 0 6px var(--status-green); }
        .status-yellow { background-color: var(--status-yellow); box-shadow: 0 0 6px var(--status-yellow); }
        
        /* --- 任務列表 --- */
        .task-list { min-height: 60px; max-height: 400px; overflow-y: auto; display: flex; flex-direction: column; gap: 12px; }
        .task-item {
            padding: 12px;
            border-radius: 8px;
            background-color: #f9f9f9;
            border: 1px solid #eee;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }
        .task-filename { font-weight: 600; }
        .task-status { font-size: 0.9em; font-weight: 500; color: #666; }
        
        /* --- 即時輸出 --- */
        .transcript-output {
            min-height: 100px;
            background-color: #e9ecef;
            padding: 16px;
            border-radius: 8px;
            white-space: pre-wrap;
            font-family: monospace;
            color: #495057;
        }
    </style>
</head>
<body>
    <div id="app" class="container">
        <!-- 標題與控制項 -->
        <header class="card" style="display: flex; justify-content: space-between; align-items: center;">
            <h1>鳳凰音訊轉錄儀 v3 (完整靜態佈局版)</h1>
            <div>
                <span>字體:</span>
                <button id="zoom-out-btn" style="padding: 5px 10px;">-</button>
                <span id="font-size-display" style="display: inline-block; width: 50px; text-align: center; font-weight: bold;">100%</span>
                <button id="zoom-in-btn" style="padding: 5px 10px;">+</button>
            </div>
        </header>

        <!-- 全域儀表板 -->
        <div class="card">
            <h2>📊 全域儀表板</h2>
            <div class="dashboard-grid">
                <div class="stat-item">
                    <span id="status-light" class="status-light status-green"></span>
                    <strong>狀態:</strong> <span id="status-text">準備就緒</span>
                </div>
                <div class="stat-item"><strong>模型:</strong> <span id="model-display">medium</span></div>
                <div class="stat-item"><strong>GPU:</strong> <span id="gpu-display">未偵測到</span></div>
            </div>
            <div class="dashboard-grid" style="margin-top: 16px;">
                 <div class="stat-item"><span>CPU:</span> <span id="cpu-label">--%</span></div>
                 <div class="stat-item"><span>RAM:</span> <span id="ram-label">--%</span></div>
                 <div class="stat-item"><span>GPU:</span> <span id="gpu-label">--%</span></div>
            </div>
        </div>

        <!-- 步驟一 & 二 -->
        <div class="grid-2-col">
            <div class="card flex-col">
                <h2>⚙️ 步驟 1: 選項 (Whisper 模型)</h2>
                <div>
                    <label for="model-select">模型大小</label>
                    <select id="model-select">
                        <option value="tiny">Tiny (最快)</option>
                        <option value="base">Base</option>
                        <option value="small">Small</option>
                        <option value="medium" selected>Medium (建議)</option>
                        <option value="large">Large (最準確)</option>
                    </select>
                </div>
                <div>
                    <label for="language-select">轉錄語言</label>
                    <select id="language-select">
                        <option value="zh">繁體中文</option>
                        <option value="en">英文</option>
                    </select>
                </div>
                <button id="confirm-settings-btn">✓ 確認設定</button>
            </div>
            <div class="card flex-col">
                <h2>📤 步驟 2: 上傳檔案</h2>
                <label for="file-input" class="file-drop-zone">
                    點擊此處選擇檔案
                </label>
                <input id="file-input" type="file" multiple class="hidden">
                <div id="file-list"></div>
            </div>
        </div>
        
        <!-- 步驟三: 開始處理 -->
        <div style="text-align: center;">
            <button id="start-processing-btn" disabled>✨ 請先選擇檔案</button>
        </div>

        <!-- 任務儀表板 -->
        <div class="grid-2-col">
            <div class="card">
                <h2>🔄 進行中任務</h2>
                <div id="ongoing-tasks" class="task-list">
                    <p id="no-ongoing-task-msg">暫無執行中任務</p>
                </div>
            </div>
            <div class="card">
                <h2>✅ 已完成任務</h2>
                <div id="completed-tasks" class="task-list">
                    <p id="no-completed-task-msg">尚無完成的任務</p>
                </div>
            </div>
        </div>
        
        <!-- 即時轉錄輸出 -->
        <div id="transcript-container" class="card">
            <h2>📝 即時轉錄輸出</h2>
            <div id="transcript-output" class="transcript-output">等待任務開始...</div>
        </div>
    </div>

    <!-- 原生 JavaScript 邏輯 -->
    <script>
        document.addEventListener('DOMContentLoaded', () => {
            const API_BASE_URL = 'http://127.0.0.1:8000';

            // --- DOM 元素 ---
            const fileInput = document.getElementById('file-input');
            const fileListDisplay = document.getElementById('file-list');
            const startBtn = document.getElementById('start-processing-btn');
            const confirmBtn = document.getElementById('confirm-settings-btn');
            const modelSelect = document.getElementById('model-select');
            const ongoingTasksContainer = document.getElementById('ongoing-tasks');
            const noOngoingTaskMsg = document.getElementById('no-ongoing-task-msg');
            const transcriptOutput = document.getElementById('transcript-output');
            const modelDisplay = document.getElementById('model-display');

            let uploadedFiles = [];

            const logAction = (action, payload = {}) => {
                console.log(`[LOG ACTION] ${action}`, payload);
                fetch(`${API_BASE_URL}/api/log/action`, {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ action, ...payload }),
                }).catch(error => {
                    console.warn('無法發送日誌到伺服器 (此為預期行為，可忽略):', error);
                });
            };

            const updateFileList = () => {
                fileListDisplay.innerHTML = uploadedFiles.map(file => `<div>- ${file.name}</div>`).join('');
                startBtn.textContent = `✨ 開始處理 ${uploadedFiles.length} 個檔案`;
                startBtn.disabled = uploadedFiles.length === 0;
            };

            const handleFileUpload = (event) => {
                const newFiles = Array.from(event.target.files);
                uploadedFiles.push(...newFiles);
                logAction('檔案已選擇', { file_count: newFiles.length });
                updateFileList();
            };

            const createTaskElement = (file) => {
                const taskElement = document.createElement('div');
                taskElement.className = 'task-item';
                taskElement.innerHTML = `
                    <span class="task-filename">${file.name}</span>
                    <span class="task-status">處理中...</span>
                `;
                return taskElement;
            };

            const startProcessing = async () => {
                if (uploadedFiles.length === 0) return;
                logAction('開始處理按鈕點擊', { file_count: uploadedFiles.length });
                
                noOngoingTaskMsg.classList.add('hidden');
                transcriptOutput.textContent = ''; // 清空初始文字

                const filesToProcess = [...uploadedFiles];
                uploadedFiles = [];
                updateFileList();

                for (const file of filesToProcess) {
                    const taskElement = createTaskElement(file);
                    ongoingTasksContainer.appendChild(taskElement);
                    transcriptOutput.textContent += `[任務開始] 正在處理檔案: ${file.name}\n`;
                    // 在這裡，您可以加入實際呼叫後端 API 的程式碼
                    // 當後端回傳結果時，再更新任務狀態和轉錄文字
                }
            };
            
            // --- 事件監聽器與初始化 ---
            fileInput.addEventListener('change', handleFileUpload);
            startBtn.addEventListener('click', startProcessing);
            confirmBtn.addEventListener('click', () => {
                modelDisplay.textContent = modelSelect.value;
                logAction('確認設定按鈕點擊', { model: modelSelect.value });
                alert(`設定已確認: 模型=${modelSelect.value}`);
            });
        });
    </script>
</body>
</html>
