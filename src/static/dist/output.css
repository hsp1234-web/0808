/*! tailwindcss v4.1.12 | MIT License | https://tailwindcss.com */
@layer properties;
.visible {
  visibility: visible;
}
.absolute {
  position: absolute;
}
.fixed {
  position: fixed;
}
.relative {
  position: relative;
}
.static {
  position: static;
}
.float-left {
  float: left;
}
.container {
  width: 100%;
}
.mx-auto {
  margin-inline: auto;
}
.block {
  display: block;
}
.flex {
  display: flex;
}
.grid {
  display: grid;
}
.hidden {
  display: none;
}
.inline-block {
  display: inline-block;
}
.table {
  display: table;
}
.h-full {
  height: 100%;
}
.min-h-\[50px\] {
  min-height: 50px;
}
.w-full {
  width: 100%;
}
.min-w-\[120px\] {
  min-width: 120px;
}
.min-w-\[150px\] {
  min-width: 150px;
}
.min-w-\[250px\] {
  min-width: 250px;
}
.flex-shrink {
  flex-shrink: 1;
}
.flex-shrink-0 {
  flex-shrink: 0;
}
.flex-grow {
  flex-grow: 1;
}
.transform {
  transform: var(--tw-rotate-x,) var(--tw-rotate-y,) var(--tw-rotate-z,) var(--tw-skew-x,) var(--tw-skew-y,);
}
.resize {
  resize: both;
}
.grid-cols-1 {
  grid-template-columns: repeat(1, minmax(0, 1fr));
}
.flex-col {
  flex-direction: column;
}
.flex-wrap {
  flex-wrap: wrap;
}
.items-center {
  align-items: center;
}
.justify-between {
  justify-content: space-between;
}
.justify-center {
  justify-content: center;
}
.overflow-hidden {
  overflow: hidden;
}
.border {
  border-style: var(--tw-border-style);
  border-width: 1px;
}
.text-center {
  text-align: center;
}
.text-right {
  text-align: right;
}
.italic {
  font-style: italic;
}
.line-through {
  text-decoration-line: line-through;
}
.overline {
  text-decoration-line: overline;
}
.underline {
  text-decoration-line: underline;
}
.opacity-25 {
  opacity: 25%;
}
.opacity-75 {
  opacity: 75%;
}
.filter {
  filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
}
.backdrop-filter {
  -webkit-backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
  backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
}
.transition {
  transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to, opacity, box-shadow, transform, translate, scale, rotate, filter, -webkit-backdrop-filter, backdrop-filter, display, visibility, content-visibility, overlay, pointer-events;
  transition-timing-function: var(--tw-ease, ease);
  transition-duration: var(--tw-duration, 0s);
}
.transition\! {
  transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to, opacity, box-shadow, transform, translate, scale, rotate, filter, -webkit-backdrop-filter, backdrop-filter, display, visibility, content-visibility, overlay, pointer-events !important;
  transition-timing-function: var(--tw-ease, ease) !important;
  transition-duration: var(--tw-duration, 0s) !important;
}
.duration-200 {
  --tw-duration: 200ms;
  transition-duration: 200ms;
}
.\[watcher\:api_server\] {
  watcher: api server;
}
.\[watcher\:db_manager\] {
  watcher: db manager;
}
.hover\:underline {
  &:hover {
    @media (hover: hover) {
      text-decoration-line: underline;
    }
  }
}
@layer base {
  :root {
    --custom-bg: #F8F9FA;
    --custom-text: #202124;
    --card-bg: rgba(255, 255, 255, 0.85);
    --card-border: #e0e0e0;
    --btn-bg: #007bff;
    --btn-hover: #0056b3;
    --disabled-bg: #ccc;
    --success: #28a745;
    --status-yellow: #ffc107;
    --rounded-card: 12px;
    --rounded-btn: 8px;
    --rounded-input: 6px;
    --shadow-card: 0 4px 6px rgba(0,0,0,0.05);
  }
}
@layer components {
  body {
    background-color: var(--custom-bg);
    color: var(--custom-text);
    font-family: ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
    padding: 1.25rem;
  }
  .container {
    max-width: 72rem;
    margin-left: auto;
    margin-right: auto;
    display: flex;
    flex-direction: column;
    gap: 1.5rem;
  }
  .grid-2-col {
    display: grid;
    grid-template-columns: repeat(1, minmax(0, 1fr));
    gap: 1.5rem;
  }
  @media (min-width: 1024px) {
    .grid-2-col {
      grid-template-columns: repeat(2, minmax(0, 1fr));
    }
  }
  .card {
    border: 1px solid var(--card-border);
    border-radius: var(--rounded-card);
    background-color: var(--card-bg);
    box-shadow: var(--shadow-card);
    backdrop-filter: blur(10px);
    padding: 1.5rem;
  }
  h1 {
    font-size: 1.875rem;
    font-weight: 700;
  }
  h2 {
    font-size: 1.25rem;
    font-weight: 600;
    margin-bottom: 0.75rem;
  }
  .btn {
    border-radius: var(--rounded-btn);
    padding: 0.5rem 1rem;
    cursor: pointer;
    font-weight: 600;
    transition: all 0.2s ease-in-out;
    border: 1px solid transparent;
    display: inline-flex;
    align-items: center;
    justify-content: center;
  }
  .btn-primary {
    background-color: var(--btn-bg);
    color: white;
    border-color: var(--btn-bg);
  }
  .btn-primary:hover:not(:disabled) {
    background-color: var(--btn-hover);
    border-color: var(--btn-hover);
    transform: translateY(-1px);
    box-shadow: 0 4px 6px -1px rgb(0 0 0 / 0.1), 0 2px 4px -2px rgb(0 0 0 / 0.1);
  }
  .btn-secondary {
    background-color: #e5e7eb;
    color: var(--custom-text);
    border-color: #d1d5db;
  }
  .btn-secondary:hover:not(:disabled) {
    background-color: #d1d5db;
    border-color: #9ca3af;
  }
  .btn-danger {
    background-color: #ef4444;
    color: white;
    font-size: 1.25rem;
    line-height: 1;
    padding: 0.5rem;
  }
  .btn-danger:hover:not(:disabled) {
    background-color: #dc2626;
  }
  .btn:disabled {
    background-color: var(--disabled-bg);
    border-color: var(--disabled-bg);
    color: #9ca3af;
    cursor: not-allowed;
    transform: none;
    box-shadow: none;
  }
  .tab-container {
    display: flex;
    gap: 0.5rem;
    padding: 0;
  }
  .tab-button {
    border-radius: var(--rounded-btn);
    padding: 0.625rem 1.25rem;
    cursor: pointer;
    border: none;
    background-color: #e5e7eb;
    color: var(--custom-text);
    opacity: 0.8;
    font-size: 1rem;
    font-weight: 600;
    transition: all 0.2s;
  }
  .tab-button:hover {
    opacity: 1;
  }
  .tab-button.active {
    background-color: var(--btn-bg);
    color: white;
    opacity: 1;
    box-shadow: 0 4px 6px -1px rgb(0 0 0 / 0.1), 0 2px 4px -2px rgb(0 0 0 / 0.1);
  }
  .tab-content {
    display: none;
  }
  .tab-content.active {
    display: block;
  }
  .input, .select, .textarea {
    border-radius: var(--rounded-input);
    padding: 0.5rem 0.75rem;
    border: 1px solid #d1d5db;
    width: 100%;
    transition: border-color 0.2s, box-shadow 0.2s;
  }
  .input:focus, .select:focus, .textarea:focus {
    outline: none;
    border-color: var(--btn-bg);
    box-shadow: 0 0 0 2px rgba(0, 123, 255, 0.25);
  }
  .checkbox {
    width: 1rem;
    height: 1rem;
    border-radius: 0.25rem;
    border: 1px solid #d1d5db;
    cursor: pointer;
  }
  .checkbox:checked {
    background-color: var(--btn-bg);
    border-color: var(--btn-bg);
  }
  .file-drop-zone {
    border-radius: var(--rounded-card);
    border-width: 2px;
    border-style: dashed;
    border-color: #d1d5db;
    padding: 2rem;
    text-align: center;
    cursor: pointer;
    transition: background-color 0.2s, border-color 0.2s;
  }
  .file-drop-zone:hover {
    border-color: var(--btn-bg);
    background-color: #eff6ff;
  }
  .task-list {
    min-height: 60px;
    max-height: 400px;
    overflow-y: auto;
    display: flex;
    flex-direction: column;
    gap: 0.75rem;
  }
  .task-item {
    padding: 0.75rem 1rem;
    border-radius: 0.5rem;
    background-color: #f9fafb;
    border: 1px solid #e5e7eb;
    display: flex;
    justify-content: space-between;
    align-items: center;
    flex-wrap: wrap;
    gap: 0.75rem;
    transition: background-color 0.2s, box-shadow 0.2s;
  }
  .task-item:hover {
    background-color: white;
    box-shadow: 0 1px 3px 0 rgb(0 0 0 / 0.1), 0 1px 2px -1px rgb(0 0 0 / 0.1);
  }
  .task-filename {
    font-weight: 600;
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
    max-width: 20rem;
  }
  .task-status {
    font-size: 0.875rem;
    font-weight: 500;
  }
  .status-failed, .status-invalid {
    color: #dc2626;
    font-weight: 600;
  }
  .status-valid {
    color: #16a34a;
    font-weight: 600;
  }
  .status-downloading, .status-processing {
    color: #2563eb;
  }
  .task-actions a {
    border-radius: var(--rounded-input);
    text-decoration: none;
    padding: 0.375rem 0.75rem;
    color: white;
    font-size: 0.875rem;
    transition: all 0.2s;
    display: inline-block;
    border: none;
    font-weight: 500;
    text-align: center;
  }
  .task-actions a:hover {
    transform: translateY(-1px);
    opacity: 0.9;
  }
  .task-actions .btn-preview {
    background-color: var(--btn-bg);
  }
  .task-actions .btn-download {
    background-color: var(--success);
  }
  .task-actions .btn-rename {
    background-color: var(--status-yellow);
    color: var(--custom-text);
  }
  .modal-overlay {
    position: fixed;
    inset: 0;
    width: 100%;
    height: 100%;
    background-color: rgb(0 0 0 / 0.6);
    display: flex;
    justify-content: center;
    align-items: center;
    z-index: 50;
    padding: 1.25rem;
  }
  .modal-content {
    border-radius: var(--rounded-card);
    background-color: white;
    padding: 1.5rem;
    box-shadow: 0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1);
    width: 100%;
    max-width: 56rem;
    max-height: 90vh;
    display: flex;
    flex-direction: column;
    gap: 1rem;
  }
  .modal-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    border-bottom: 1px solid #e5e7eb;
    padding-bottom: 0.75rem;
  }
  .modal-close-button {
    background-color: transparent;
    border: none;
    font-size: 2.25rem;
    cursor: pointer;
    color: #6b7280;
    line-height: 1;
    padding: 0;
  }
  .modal-close-button:hover {
    color: #1f2937;
  }
  .modal-body {
    overflow-y: auto;
    flex-grow: 1;
  }
  .modal-footer {
    display: flex;
    justify-content: flex-end;
    gap: 0.75rem;
    border-top: 1px solid #e5e7eb;
    padding-top: 1rem;
  }
}
@property --tw-rotate-x {
  syntax: "*";
  inherits: false;
}
@property --tw-rotate-y {
  syntax: "*";
  inherits: false;
}
@property --tw-rotate-z {
  syntax: "*";
  inherits: false;
}
@property --tw-skew-x {
  syntax: "*";
  inherits: false;
}
@property --tw-skew-y {
  syntax: "*";
  inherits: false;
}
@property --tw-border-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@property --tw-blur {
  syntax: "*";
  inherits: false;
}
@property --tw-brightness {
  syntax: "*";
  inherits: false;
}
@property --tw-contrast {
  syntax: "*";
  inherits: false;
}
@property --tw-grayscale {
  syntax: "*";
  inherits: false;
}
@property --tw-hue-rotate {
  syntax: "*";
  inherits: false;
}
@property --tw-invert {
  syntax: "*";
  inherits: false;
}
@property --tw-opacity {
  syntax: "*";
  inherits: false;
}
@property --tw-saturate {
  syntax: "*";
  inherits: false;
}
@property --tw-sepia {
  syntax: "*";
  inherits: false;
}
@property --tw-drop-shadow {
  syntax: "*";
  inherits: false;
}
@property --tw-drop-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-drop-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-drop-shadow-size {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-blur {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-brightness {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-contrast {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-grayscale {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-hue-rotate {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-invert {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-opacity {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-saturate {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-sepia {
  syntax: "*";
  inherits: false;
}
@property --tw-duration {
  syntax: "*";
  inherits: false;
}
@layer properties {
  @supports ((-webkit-hyphens: none) and (not (margin-trim: inline))) or ((-moz-orient: inline) and (not (color:rgb(from red r g b)))) {
    *, ::before, ::after, ::backdrop {
      --tw-rotate-x: initial;
      --tw-rotate-y: initial;
      --tw-rotate-z: initial;
      --tw-skew-x: initial;
      --tw-skew-y: initial;
      --tw-border-style: solid;
      --tw-blur: initial;
      --tw-brightness: initial;
      --tw-contrast: initial;
      --tw-grayscale: initial;
      --tw-hue-rotate: initial;
      --tw-invert: initial;
      --tw-opacity: initial;
      --tw-saturate: initial;
      --tw-sepia: initial;
      --tw-drop-shadow: initial;
      --tw-drop-shadow-color: initial;
      --tw-drop-shadow-alpha: 100%;
      --tw-drop-shadow-size: initial;
      --tw-backdrop-blur: initial;
      --tw-backdrop-brightness: initial;
      --tw-backdrop-contrast: initial;
      --tw-backdrop-grayscale: initial;
      --tw-backdrop-hue-rotate: initial;
      --tw-backdrop-invert: initial;
      --tw-backdrop-opacity: initial;
      --tw-backdrop-saturate: initial;
      --tw-backdrop-sepia: initial;
      --tw-duration: initial;
    }
  }
}
